Функциональный интерфейс (или SAM-интерфейс, от Single Abstract Method) в Java — это интерфейс, который содержит ровно один абстрактный метод. Такие интерфейсы можно использовать как целевые типы для лямбда-выражений и ссылок на методы. Функциональный интерфейс может также содержать другие методы, такие как дефолтные или статические методы, но у него обязательно должен быть один абстрактный метод.

Функциональные интерфейсы играют ключевую роль в функциональном программировании на Java, начиная с версии Java 8, когда были добавлены лямбда-выражения.

@FunctionalInterface
public interface MyFunctionalInterface {
    void doSomething();  // Единственный абстрактный метод
}
Функциональный интерфейс можно использовать с лямбда-выражением:


MyFunctionalInterface action = () -> System.out.println("Doing something!");
action.doSomething();  // Выведет: "Doing something!"

Определяющие правила функционального интерфейса:
Один абстрактный метод: Интерфейс должен содержать ровно один абстрактный метод. Этот метод будет использоваться для лямбда-выражения или ссылки на метод.

@FunctionalInterface
public interface MyInterface {
    void performAction();  // Единственный абстрактный метод
}
Допустимость других методов:

Дефолтные методы могут присутствовать в функциональном интерфейсе. Они могут содержать реализацию и не влияют на статус функционального интерфейса.
Статические методы также могут присутствовать и не влияют на статус функционального интерфейса.
Если интерфейс наследует другие интерфейсы, он всё равно может оставаться функциональным, если в сумме после наследования у него будет ровно один абстрактный метод.
